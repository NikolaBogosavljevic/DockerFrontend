{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aurora Gjemaj\\\\ueK223_Gruppe5_Frontend\\\\src\\\\components\\\\molecules\\\\UserForm\\\\ImageForm.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Box, Button, TextField } from '@mui/material';\nimport { useFormik } from 'formik';\nimport { object, string } from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageForm = ({\n  image,\n  submitActionHandler\n}) => {\n  _s();\n  const formik = useFormik({\n    initialValues: {\n      image: '',\n      // Initialize with an empty string\n      description: image.description || '' // Preserve existing description\n    },\n\n    validationSchema: object({\n      // Add validation rules as needed\n      description: string().required('Description is required').max(500)\n    }),\n    onSubmit: values => {\n      submitActionHandler(values);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formik.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        paddingTop: '15px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"image\",\n        accept: \"image/*\" // Limit file selection to image types\n        ,\n        onChange: event => {\n          formik.setFieldValue('image', event.currentTarget.files[0]);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"description\",\n        name: \"description\",\n        label: \"Description\",\n        variant: \"outlined\",\n        fullWidth: true,\n        multiline: true,\n        rows: 4,\n        value: formik.values.description,\n        onChange: formik.handleChange,\n        onBlur: formik.handleBlur,\n        error: formik.touched.description && Boolean(formik.errors.description),\n        helperText: formik.touched.description && formik.errors.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        sx: {\n          marginTop: '15px',\n          marginRight: '10px'\n        },\n        variant: \"contained\",\n        color: \"success\",\n        type: \"submit\",\n        disabled: !formik.isValid,\n        children: \"Add Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageForm, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n_c = ImageForm;\nexport default ImageForm;\nvar _c;\n$RefreshReg$(_c, \"ImageForm\");","map":{"version":3,"names":["React","Box","Button","TextField","useFormik","object","string","jsxDEV","_jsxDEV","ImageForm","image","submitActionHandler","_s","formik","initialValues","description","validationSchema","required","max","onSubmit","values","handleSubmit","children","sx","paddingTop","type","name","accept","onChange","event","setFieldValue","currentTarget","files","fileName","_jsxFileName","lineNumber","columnNumber","id","label","variant","fullWidth","multiline","rows","value","handleChange","onBlur","handleBlur","error","touched","Boolean","errors","helperText","marginTop","marginRight","color","disabled","isValid","_c","$RefreshReg$"],"sources":["C:/Users/Aurora Gjemaj/ueK223_Gruppe5_Frontend/src/components/molecules/UserForm/ImageForm.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Box, Button, TextField } from '@mui/material';\r\nimport { useFormik } from 'formik';\r\nimport { object, string } from 'yup';\r\nimport { Image_Post } from '../../../Services/ImageService';\r\n\r\ninterface ImageProps {\r\n  image: Image_Post;\r\n  submitActionHandler: (values: Image_Post) => void;\r\n}\r\n\r\nconst ImageForm = ({ image, submitActionHandler }: ImageProps) => {\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      image: '', // Initialize with an empty string\r\n      description: image.description || '', // Preserve existing description\r\n    },\r\n    validationSchema: object({\r\n      // Add validation rules as needed\r\n      description: string().required('Description is required').max(500),\r\n    }),\r\n    onSubmit: (values: Image_Post) => {\r\n      submitActionHandler(values);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <form onSubmit={formik.handleSubmit}>\r\n      <Box sx={{ paddingTop: '15px' }}>\r\n        {/* Input for image file */}\r\n        <input\r\n          type=\"file\"\r\n          name=\"image\"\r\n          accept=\"image/*\" // Limit file selection to image types\r\n          onChange={(event) => {\r\n            formik.setFieldValue('image', event.currentTarget.files[0]);\r\n          }}\r\n        />\r\n\r\n        {/* Input for image description */}\r\n        <TextField\r\n          id='description'\r\n          name='description'\r\n          label='Description'\r\n          variant='outlined'\r\n          fullWidth\r\n          multiline\r\n          rows={4}\r\n          value={formik.values.description}\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          error={formik.touched.description && Boolean(formik.errors.description)}\r\n          helperText={formik.touched.description && formik.errors.description}\r\n        />\r\n      </Box>\r\n\r\n      <div>\r\n        <Button\r\n          sx={{ marginTop: '15px', marginRight: '10px' }}\r\n          variant='contained'\r\n          color='success'\r\n          type='submit'\r\n          disabled={!formik.isValid}\r\n        >\r\n          Add Image\r\n        </Button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ImageForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}