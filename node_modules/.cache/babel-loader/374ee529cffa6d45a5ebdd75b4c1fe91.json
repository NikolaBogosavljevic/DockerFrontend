{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aurora Gjemaj\\\\ueK223_Gruppe5_Frontend\\\\src\\\\components\\\\molecules\\\\UserForm\\\\ImageForm.tsx\",\n  _s = $RefreshSig$();\nimport { useFormik } from 'formik';\nimport { Box, Button, TextField } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { object, string } from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ImageForm = ({\n  image,\n  submitActionHandler\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const formik = useFormik({\n    initialValues: {\n      id: 0,\n      image: '',\n      description: '',\n      likes: 0,\n      author: {\n        id: '',\n        email: '',\n        firstName: '',\n        lastName: '',\n        roles: []\n      }\n    },\n    validationSchema: object({\n      image: string().required().min(2).max(50),\n      description: string().required().min(2).max(50)\n    }),\n    onSubmit: values => {\n      submitActionHandler(values);\n    },\n    enableReinitialize: true\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          paddingTop: '15px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"image\",\n          label: \"image\",\n          variant: \"outlined\",\n          sx: {\n            paddingRight: '10px'\n          },\n          onBlur: formik.handleBlur,\n          onChange: formik.handleChange,\n          error: Boolean(formik.touched.image && formik.errors.image),\n          value: formik.values.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), formik.errors.image && formik.touched.image ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: 'red'\n          },\n          children: formik.errors.image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this) : null, /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"description\",\n          label: \"description\",\n          variant: \"outlined\",\n          sx: {\n            paddingRight: '10px'\n          },\n          onBlur: formik.handleBlur,\n          onChange: formik.handleChange,\n          error: Boolean(formik.touched.description && formik.errors.description),\n          value: formik.values.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), formik.errors.description && formik.touched.description ? /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            color: 'red'\n          },\n          children: formik.errors.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          sx: {\n            marginTop: '15px',\n            marginRight: '10px'\n          },\n          variant: \"contained\",\n          color: \"success\",\n          type: \"submit\",\n          disabled: !(formik.dirty && formik.isValid),\n          children: [image.id && 'Save', !image.id && 'Add']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          sx: {\n            marginTop: '15px'\n          },\n          variant: \"contained\",\n          color: \"error\",\n          onClick: () => {\n            navigate('/users');\n          },\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(ImageForm, \"bpSrOvH8nJQ9VaMidkvMycx/GW8=\", false, function () {\n  return [useNavigate, useFormik];\n});\n_c = ImageForm;\nexport default ImageForm;\nvar _c;\n$RefreshReg$(_c, \"ImageForm\");","map":{"version":3,"names":["useFormik","Box","Button","TextField","useNavigate","object","string","jsxDEV","_jsxDEV","Fragment","_Fragment","ImageForm","image","submitActionHandler","_s","navigate","formik","initialValues","id","description","likes","author","email","firstName","lastName","roles","validationSchema","required","min","max","onSubmit","values","enableReinitialize","children","handleSubmit","sx","paddingTop","label","variant","paddingRight","onBlur","handleBlur","onChange","handleChange","error","Boolean","touched","errors","value","fileName","_jsxFileName","lineNumber","columnNumber","style","color","marginTop","marginRight","type","disabled","dirty","isValid","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Aurora Gjemaj/ueK223_Gruppe5_Frontend/src/components/molecules/UserForm/ImageForm.tsx"],"sourcesContent":["import { useFormik } from 'formik';\r\nimport { Box, Button, TextField } from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { object, string } from 'yup';\r\nimport { Image_Post } from '../../../Services/ImageService';\r\n\r\ninterface ImageProps {\r\n  image: Image_Post;\r\n  submitActionHandler: (values: Image_Post) => void;\r\n}\r\n\r\nconst ImageForm = ({ image, submitActionHandler }: ImageProps) => {\r\n  const navigate = useNavigate();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n        id: 0,\r\n        image: '',\r\n        description: '',\r\n        likes: 0,\r\n        author: {\r\n            id: '',\r\n            email: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            roles: []\r\n        }\r\n    },\r\n    validationSchema: object({\r\n      image: string().required().min(2).max(50),\r\n      description: string().required().min(2).max(50),\r\n    }),\r\n    onSubmit: (values: Image_Post) => {\r\n      submitActionHandler(values);\r\n    },\r\n    enableReinitialize: true,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <Box sx={{ paddingTop: '15px' }}>\r\n          <TextField\r\n            id='image'                \r\n            label='image'\r\n            variant='outlined'\r\n            sx={{ paddingRight: '10px' }}\r\n            onBlur={formik.handleBlur}\r\n            onChange={formik.handleChange}\r\n            error={Boolean(formik.touched.image && formik.errors.image)}\r\n            value={formik.values.image}\r\n          />\r\n          {formik.errors.image && formik.touched.image ? (\r\n            <div style={{ color: 'red' }}>{formik.errors.image}</div>\r\n          ) : null}\r\n          <TextField\r\n            id='description'\r\n            label='description'\r\n            variant='outlined'\r\n            sx={{ paddingRight: '10px' }}\r\n            onBlur={formik.handleBlur}\r\n            onChange={formik.handleChange}\r\n            error={Boolean(formik.touched.description && formik.errors.description)}\r\n            value={formik.values.description}\r\n          />\r\n          {formik.errors.description && formik.touched.description ? (\r\n            <div style={{ color: 'red' }}>{formik.errors.description}</div>\r\n          ) : null}\r\n         \r\n        </Box>\r\n        <div>\r\n          <Button\r\n            sx={{ marginTop: '15px', marginRight: '10px' }}\r\n            variant='contained'\r\n            color='success'\r\n            type='submit'\r\n            disabled={!(formik.dirty && formik.isValid)}\r\n          >\r\n            {image.id && 'Save'}\r\n            {!image.id && 'Add'}\r\n          </Button>\r\n          <Button\r\n            sx={{ marginTop: '15px' }}\r\n            variant='contained'\r\n            color='error'\r\n            onClick={() => {\r\n              navigate('/users');\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ImageForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}