{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aurora Gjemaj\\\\ueK223_Gruppe5_Frontend\\\\src\\\\components\\\\molecules\\\\UserForm\\\\ImageForm.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Box, Button } from '@mui/material';\nimport { useFormik } from 'formik';\nimport { object, string } from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageForm = ({\n  image,\n  submitActionHandler\n}) => {\n  _s();\n  const formik = useFormik({\n    initialValues: {\n      id: 0,\n      image: \"\",\n      description: \"\",\n      likes: 0,\n      author: {\n        id: \"\",\n        email: \"\",\n        firstName: \"\",\n        lastName: \"\",\n        roles: []\n      }\n    },\n    validationSchema: object({\n      // Add validation rules as needed\n      description: string().required('Description is required')\n    }),\n    onSubmit: values => {\n      submitActionHandler(values);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formik.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        paddingTop: '15px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"image\",\n        accept: \"image/*\" // Limit file selection to image types\n        ,\n        onChange: event => {\n          formik.setFieldValue('image', event.currentTarget.files[0]);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), formik.touched.description && formik.errors.description && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: formik.errors.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        sx: {\n          marginTop: '15px',\n          marginRight: '10px'\n        },\n        variant: \"contained\",\n        color: \"success\",\n        type: \"submit\",\n        disabled: !formik.isValid,\n        children: \"Add Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageForm, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n_c = ImageForm;\nexport default ImageForm;\nvar _c;\n$RefreshReg$(_c, \"ImageForm\");","map":{"version":3,"names":["React","Box","Button","useFormik","object","string","jsxDEV","_jsxDEV","ImageForm","image","submitActionHandler","_s","formik","initialValues","id","description","likes","author","email","firstName","lastName","roles","validationSchema","required","onSubmit","values","handleSubmit","children","sx","paddingTop","type","name","accept","onChange","event","setFieldValue","currentTarget","files","fileName","_jsxFileName","lineNumber","columnNumber","touched","errors","style","color","marginTop","marginRight","variant","disabled","isValid","_c","$RefreshReg$"],"sources":["C:/Users/Aurora Gjemaj/ueK223_Gruppe5_Frontend/src/components/molecules/UserForm/ImageForm.tsx"],"sourcesContent":["import React from 'react';\r\nimport { Box, Button, TextField } from '@mui/material';\r\nimport { useFormik } from 'formik';\r\nimport { object, string } from 'yup';\r\nimport { Image_Post } from '../../../Services/ImageService';\r\n\r\ninterface ImageProps {\r\n  image: Image_Post;\r\n  submitActionHandler: (values: Image_Post) => void;\r\n}\r\n\r\nconst ImageForm = ({ image, submitActionHandler }: ImageProps) => {\r\n  const formik = useFormik({\r\n    initialValues: {\r\n        id: 0,\r\n        image: \"\",\r\n        description: \"\",\r\n        likes: 0,\r\n        author: {\r\n          id: \"\",\r\n          email: \"\",\r\n          firstName: \"\",\r\n          lastName: \"\",\r\n          roles: []\r\n      }\r\n    },\r\n    validationSchema: object({\r\n      // Add validation rules as needed\r\n      description: string().required('Description is required'),\r\n    }),\r\n    onSubmit: (values: Image_Post) => {\r\n      submitActionHandler(values);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <form onSubmit={formik.handleSubmit}>\r\n      <Box sx={{ paddingTop: '15px' }}>\r\n        {/* Input for image file */}\r\n        <input\r\n          type=\"file\"\r\n          name=\"image\"\r\n          accept=\"image/*\" // Limit file selection to image types\r\n          onChange={(event) => {\r\n            formik.setFieldValue('image', event.currentTarget.files[0]);\r\n          }}\r\n        />\r\n        {/* Display validation error for description */}\r\n        {formik.touched.description && formik.errors.description && (\r\n          <div style={{ color: 'red' }}>{formik.errors.description}</div>\r\n        )}\r\n      </Box>\r\n      <div>\r\n        <Button\r\n          sx={{ marginTop: '15px', marginRight: '10px' }}\r\n          variant='contained'\r\n          color='success'\r\n          type='submit'\r\n          disabled={!formik.isValid}\r\n        >\r\n          Add Image\r\n        </Button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ImageForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,EAAEC,MAAM,QAAmB,eAAe;AACtD,SAASC,SAAS,QAAQ,QAAQ;AAClC,SAASC,MAAM,EAAEC,MAAM,QAAQ,KAAK;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQrC,MAAMC,SAAS,GAAGA,CAAC;EAAEC,KAAK;EAAEC;AAAgC,CAAC,KAAK;EAAAC,EAAA;EAChE,MAAMC,MAAM,GAAGT,SAAS,CAAC;IACvBU,aAAa,EAAE;MACXC,EAAE,EAAE,CAAC;MACLL,KAAK,EAAE,EAAE;MACTM,WAAW,EAAE,EAAE;MACfC,KAAK,EAAE,CAAC;MACRC,MAAM,EAAE;QACNH,EAAE,EAAE,EAAE;QACNI,KAAK,EAAE,EAAE;QACTC,SAAS,EAAE,EAAE;QACbC,QAAQ,EAAE,EAAE;QACZC,KAAK,EAAE;MACX;IACF,CAAC;IACDC,gBAAgB,EAAElB,MAAM,CAAC;MACvB;MACAW,WAAW,EAAEV,MAAM,CAAC,CAAC,CAACkB,QAAQ,CAAC,yBAAyB;IAC1D,CAAC,CAAC;IACFC,QAAQ,EAAGC,MAAkB,IAAK;MAChCf,mBAAmB,CAACe,MAAM,CAAC;IAC7B;EACF,CAAC,CAAC;EAEF,oBACElB,OAAA;IAAMiB,QAAQ,EAAEZ,MAAM,CAACc,YAAa;IAAAC,QAAA,gBAClCpB,OAAA,CAACN,GAAG;MAAC2B,EAAE,EAAE;QAAEC,UAAU,EAAE;MAAO,CAAE;MAAAF,QAAA,gBAE9BpB,OAAA;QACEuB,IAAI,EAAC,MAAM;QACXC,IAAI,EAAC,OAAO;QACZC,MAAM,EAAC,SAAS,CAAC;QAAA;QACjBC,QAAQ,EAAGC,KAAK,IAAK;UACnBtB,MAAM,CAACuB,aAAa,CAAC,OAAO,EAAED,KAAK,CAACE,aAAa,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC7D;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,EAED7B,MAAM,CAAC8B,OAAO,CAAC3B,WAAW,IAAIH,MAAM,CAAC+B,MAAM,CAAC5B,WAAW,iBACtDR,OAAA;QAAKqC,KAAK,EAAE;UAAEC,KAAK,EAAE;QAAM,CAAE;QAAAlB,QAAA,EAAEf,MAAM,CAAC+B,MAAM,CAAC5B;MAAW;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAC/D;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC,eACNlC,OAAA;MAAAoB,QAAA,eACEpB,OAAA,CAACL,MAAM;QACL0B,EAAE,EAAE;UAAEkB,SAAS,EAAE,MAAM;UAAEC,WAAW,EAAE;QAAO,CAAE;QAC/CC,OAAO,EAAC,WAAW;QACnBH,KAAK,EAAC,SAAS;QACff,IAAI,EAAC,QAAQ;QACbmB,QAAQ,EAAE,CAACrC,MAAM,CAACsC,OAAQ;QAAAvB,QAAA,EAC3B;MAED;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX,CAAC;AAAC9B,EAAA,CAtDIH,SAAS;EAAA,QACEL,SAAS;AAAA;AAAAgD,EAAA,GADpB3C,SAAS;AAwDf,eAAeA,SAAS;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}