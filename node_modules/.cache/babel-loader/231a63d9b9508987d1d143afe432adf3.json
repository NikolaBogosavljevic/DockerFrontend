{"ast":null,"code":"import { defaultAxiosInstatnstace } from \"../API\";\nconst MovieService = (api = defaultAxiosInstatnstace) => ({\n  getMovieById: async id => {\n    const data = await api.get(`/movies/${id}`);\n    console.log(data);\n    return data.data;\n  },\n  getMovies: async () => {\n    const data = await api.get(\"/movies\");\n    return data.data;\n  },\n  createMovie: async params => {\n    const res = await api.post(\"/movies\", params);\n    if (res && res.status === 200) {\n      console.log(\"movie successfully created\");\n    }\n  },\n  removeMovie: async id => {\n    const res = await api.delete(`/movies/${id}`);\n    if (res && res.status === 200) {\n      console.log(\"movie successfully deleted\");\n    }\n  },\n  updateMovie: async params => {\n    const res = await api.put(`/movies/${params.id}`, {\n      ...params,\n      \"Release Date\": params.ReleaseDate\n    });\n    if (res && res.status === 200) {\n      console.log(\"movie successfully updated\");\n    }\n  }\n});\n_c = MovieService;\nexport default MovieService;\nvar _c;\n$RefreshReg$(_c, \"MovieService\");","map":{"version":3,"names":["defaultAxiosInstatnstace","MovieService","api","getMovieById","id","data","get","console","log","getMovies","createMovie","params","res","post","status","removeMovie","delete","updateMovie","put","ReleaseDate","_c","$RefreshReg$"],"sources":["C:/Users/Aurora Gjemaj/ueK223_Gruppe5_Frontend/src/Services/ImageService.tsx"],"sourcesContent":["import { AxiosInstance } from \"axios\";\r\nimport { defaultAxiosInstatnstace } from \"../API\";\r\n\r\ntype AddMovieRequest = {\r\n  Title: string;\r\n  ReleaseDate: string | null;\r\n \r\n};\r\n\r\n\r\n\r\nexport type Movie = {\r\n  id: number;\r\n  Title: string;\r\n  ReleaseDate: string | null;\r\n\r\n};\r\n\r\nconst  MovieService = (api: AxiosInstance = defaultAxiosInstatnstace) => ({\r\n  getMovieById: async (id: number) => {\r\n    const data = await api.get(`/movies/${id}`);\r\n    console.log(data);\r\n    return data.data;\r\n    \r\n  },\r\n  getMovies: async () => {\r\n    const data = await api.get<MovieType[]>(\"/movies\");\r\n    return data.data;\r\n  },\r\n  createMovie: async (params: AddMovieRequest) => {\r\n    const res = await api.post(\"/movies\", params);\r\n    if (res && res.status === 200) {\r\n      console.log(\"movie successfully created\");\r\n    }\r\n  },\r\n  removeMovie: async (id: number) => {\r\n    const res = await api.delete(`/movies/${id}`);\r\n    if (res && res.status === 200) {\r\n      console.log(\"movie successfully deleted\");\r\n    }\r\n  },\r\n  updateMovie: async (params: Movie) => {\r\n    const res = await api.put(`/movies/${params.id}`, {...params, \"Release Date\": params.ReleaseDate});\r\n    if (res && res.status === 200) {\r\n      console.log(\"movie successfully updated\");\r\n    }\r\n  },\r\n});\r\n\r\nexport default MovieService;"],"mappings":"AACA,SAASA,wBAAwB,QAAQ,QAAQ;AAiBjD,MAAOC,YAAY,GAAGA,CAACC,GAAkB,GAAGF,wBAAwB,MAAM;EACxEG,YAAY,EAAE,MAAOC,EAAU,IAAK;IAClC,MAAMC,IAAI,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAE,WAAUF,EAAG,EAAC,CAAC;IAC3CG,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;IACjB,OAAOA,IAAI,CAACA,IAAI;EAElB,CAAC;EACDI,SAAS,EAAE,MAAAA,CAAA,KAAY;IACrB,MAAMJ,IAAI,GAAG,MAAMH,GAAG,CAACI,GAAG,CAAc,SAAS,CAAC;IAClD,OAAOD,IAAI,CAACA,IAAI;EAClB,CAAC;EACDK,WAAW,EAAE,MAAOC,MAAuB,IAAK;IAC9C,MAAMC,GAAG,GAAG,MAAMV,GAAG,CAACW,IAAI,CAAC,SAAS,EAAEF,MAAM,CAAC;IAC7C,IAAIC,GAAG,IAAIA,GAAG,CAACE,MAAM,KAAK,GAAG,EAAE;MAC7BP,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;IAC3C;EACF,CAAC;EACDO,WAAW,EAAE,MAAOX,EAAU,IAAK;IACjC,MAAMQ,GAAG,GAAG,MAAMV,GAAG,CAACc,MAAM,CAAE,WAAUZ,EAAG,EAAC,CAAC;IAC7C,IAAIQ,GAAG,IAAIA,GAAG,CAACE,MAAM,KAAK,GAAG,EAAE;MAC7BP,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;IAC3C;EACF,CAAC;EACDS,WAAW,EAAE,MAAON,MAAa,IAAK;IACpC,MAAMC,GAAG,GAAG,MAAMV,GAAG,CAACgB,GAAG,CAAE,WAAUP,MAAM,CAACP,EAAG,EAAC,EAAE;MAAC,GAAGO,MAAM;MAAE,cAAc,EAAEA,MAAM,CAACQ;IAAW,CAAC,CAAC;IAClG,IAAIP,GAAG,IAAIA,GAAG,CAACE,MAAM,KAAK,GAAG,EAAE;MAC7BP,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;IAC3C;EACF;AACF,CAAC,CAAC;AAACY,EAAA,GA7BInB,YAAY;AA+BnB,eAAeA,YAAY;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}