{"version":3,"sources":["config/Api.ts","Services/AuthorityService.ts","Services/UserService.ts","Contexts/ActiveUserContext.tsx","components/pages/LoginPage/LoginPage.tsx","Router/PrivateRoute.tsx","components/pages/UserPage/UserTable.tsx","components/molecules/UserForm/UserForm.tsx","components/pages/UserPage/UserPage.tsx","Services/ImageService.tsx","components/atoms/NavBar.tsx","components/atoms/LikeButton.tsx","components/pages/HomePage.tsx","components/pages/CreateImage.tsx","components/pages/UpdateImage.tsx","components/pages/UserPage/UserPosts.tsx","Router/Router.tsx","App.tsx","index.tsx"],"names":["api","axios","create","baseURL","process","interceptors","request","use","token","localStorage","getItem","headers","Authorization","error","Promise","reject","response","authoritySet","Set","AuthorityService","initAuthoritySet","user","arguments","length","undefined","JSON","parse","roles","forEach","role","authorities","authority","add","name","hasAuthority","has","hasAuthorities","_step","_iterator","_createForOfIteratorHelper","s","n","done","element","value","err","e","f","hasAnyAuthority","_step2","_iterator2","clearAuthorities","clear","UserService","getUser","_getUser","_asyncToGenerator","_regeneratorRuntime","mark","_callee","userID","_yield$api$get","data","wrap","_context","prev","next","get","concat","sent","abrupt","stop","_x","apply","updateUser","put","id","addUser","post","then","res","getAllUsers","deleteUser","delete","USER_DATA_LOCAL_STORAGE_KEY","TOKEN_LOCAL_STORAGE_KEY","noContextProviderFound","Error","defaultContextValue","login","logout","setActiveUser","loadActiveUser","checkRole","ActiveUserContext","createContext","ActiveUserContextProvider","_ref","children","_useState","useState","storeUser","loadSavedUserData","_useState2","_slicedToArray","setUser","navigate","useNavigate","updatedUser","setItem","stringify","resetAuthorization","_ref2","email","password","console","log","authorization","_x2","useEffect","_jsx","Provider","finally","roleToCheck","some","validationSchema","Yup","shape","Login","btnstyle","margin","useContext","Grid","_jsxs","Paper","elevation","style","padding","height","width","Formik","initialValues","enableReinitialize","onSubmit","values","toLowerCase","catch","alert","validateOnChange","isInitialValid","props","Form","handleSubmit","TextField","label","placeholder","fullWidth","required","autoFocus","onChange","handleChange","onBlur","handleBlur","errors","type","Button","color","variant","Typography","Link","href","PrivateRoute","RouteComponent","activeUserContext","tokenString","replace","jwt","exp","Date","now","isLoggedIn","onClick","Navigate","to","UserTable","users","setUsers","_Fragment","map","Card","sx","minWidth","CardContent","firstName","lastName","CardActions","size","UserForm","submitActionHandler","formik","useFormik","object","string","min","max","Box","paddingTop","paddingRight","Boolean","touched","marginTop","marginRight","disabled","dirty","isValid","UserPage","userId","useParams","ImageService","updateImage","_updateImage","params","_objectSpread","image","description","status","createImage","_createImage","_callee2","_context2","getAllImages","_getAllImages","_callee3","_context3","t0","getImageById","_getImageById","_callee4","imageId","_context4","_x3","deleteImage","pages","settings","ResponsiveAppBar","_React$useState","React","_React$useState2","anchorElNav","setAnchorElNav","_React$useState3","_React$useState4","anchorElUser","setAnchorElUser","handleCloseNavMenu","handleCloseUserMenu","AppBar","position","Container","maxWidth","Toolbar","disableGutters","AdbIcon","display","xs","md","mr","noWrap","component","fontFamily","fontWeight","letterSpacing","textDecoration","flexGrow","IconButton","event","currentTarget","MenuIcon","Menu","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","page","MenuItem","textAlign","my","Tooltip","title","p","Avatar","alt","src","mt","setting","inputProps","IconCheckboxes","Checkbox","icon","FavoriteBorder","checkedIcon","Favorite","Homepage","context","images","setImage","userCanEditPost","author","NavBar","container","spacing","index","item","marginLeft","borderRadius","LikeButton","CreateImage","postMessage","htmlFor","UpdateImage","setImages","setValues","likes","UserPosts","Router","Routes","Route","path","HomePage","LoginPage","App","ReactDOM","createRoot","document","getElementById","render","StrictMode","BrowserRouter"],"mappings":"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","file":"static/js/main.2fee0d5c.chunk.js","sourcesContent":["import axios, { AxiosInstance } from \"axios\";\r\n\r\n/**\r\n * isDev returns a boolean if the application is running in development-mode.\r\n */\r\nconst isDev = (): boolean => !process.env.NODE_ENV || process.env.NODE_ENV === \"development\";\r\n\r\n/**\r\n * Create an Axios instance for the api.\r\n */\r\nconst createAPI = (): AxiosInstance => {\r\n  return axios.create({ baseURL: process.env.REACT_APP_BASEURL });\r\n};\r\n\r\n/**\r\n * api constant is the axios-instance used for all requests to the rest-api.\r\n */\r\nconst api: AxiosInstance = createAPI();\r\n\r\n/**\r\n * Set the Authorization header on each request equal to the token which\r\n * is stored inside the localStorage if a user is authenticated.\r\n */\r\napi.interceptors.request.use(\r\n  (request) => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      request.headers.Authorization = token;\r\n    }\r\n    return request;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n/**\r\n * Log outgoing requests if the environment is in development-mode\r\n */\r\napi.interceptors.request.use((request) => {\r\n  if (isDev() && request.method) {\r\n    const info = `REQUEST ${request.method.toLocaleUpperCase()} ${request.url}`;\r\n    if (request.method.toLocaleLowerCase() === \"get\") {\r\n      console.debug(info);\r\n    } else {\r\n      console.debug(info, request.data);\r\n    }\r\n  }\r\n  return request;\r\n}, Promise.reject);\r\n\r\n/**\r\n * Log incoming responses if the environment is in development-mode\r\n */\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    if (isDev() && response.config && response.config.method) {\r\n      console.debug(\r\n        `RESPONSE ${response.config.method.toLocaleUpperCase()} ${response.config.url}`,\r\n        response.data\r\n      );\r\n    }\r\n    return response;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\nexport default api;\r\n","import { Authority } from '../types/models/Authority.model';\r\nimport { Role } from '../types/models/Role.model';\r\n\r\nconst authoritySet = new Set();\r\n\r\nconst AuthorityService = {\r\n  initAuthoritySet: (\r\n    user = JSON.parse(localStorage.getItem('user') || '{}')\r\n  ) => {\r\n    const roles = user && user.roles ? user.roles : [];\r\n    roles.forEach((role: Role) => {\r\n      role.authorities.forEach((authority: Authority) => {\r\n        authoritySet.add(authority.name);\r\n      });\r\n    });\r\n  },\r\n  \r\n  hasAuthority: (authority: Authority) => {\r\n    AuthorityService.initAuthoritySet();\r\n    return authoritySet.has(authority);\r\n  },\r\n  hasAuthorities: (authorities: Authority[]) => {\r\n    AuthorityService.initAuthoritySet();\r\n    for (const element of authorities) {\r\n      if (!authoritySet.has(element)) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  },\r\n  hasAnyAuthority: (authorities: Authority[]) => {\r\n    for (const element of authorities) {\r\n      if (authoritySet.has(element)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  },\r\n  clearAuthorities: (): void => {\r\n    authoritySet.clear();\r\n  },\r\n};\r\n\r\nexport default AuthorityService;\r\n","import api from '../config/Api';\r\nimport { User } from '../types/models/User.model';\r\n\r\nconst UserService = {\r\n  getUser: async (userID: string): Promise<User> => {\r\n    const { data } = await api.get<User>(`/user/${userID}`);\r\n    return data;\r\n  },\r\n\r\n  updateUser: (user: User) => {\r\n    return api.put(`/user/${user.id}`, user);\r\n  },\r\n\r\n  addUser: (user: User) => {\r\n    return api.post('/user/registerUser', user).then((res) => {\r\n      return res.data;\r\n    });\r\n  },\r\n\r\n  getAllUsers: () => {\r\n    return api.get(`/user`);\r\n  },\r\n\r\n  deleteUser: (id: string) => {\r\n    return api.delete(`/user/${id}`);\r\n  },\r\n};\r\n\r\nexport default UserService;\r\n","import { createContext, useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport api from \"../config/Api\";\r\nimport roles from \"../config/Roles\";\r\nimport AuthorityService from \"../Services/AuthorityService\";\r\nimport UserService from \"../Services/UserService\";\r\nimport { User } from \"../types/models/User.model\";\r\nimport { Nullable } from \"../types/Nullable\";\r\n\r\n/**\r\n * USER_DATA_LOCAL_STORAGE_KEY defines the localStorageKey in which the\r\n * activeUser gets stored.\r\n */\r\nexport const USER_DATA_LOCAL_STORAGE_KEY = \"user\";\r\nexport const TOKEN_LOCAL_STORAGE_KEY = \"token\";\r\n\r\n/**\r\n * ActiveUserContextType defines the provided values\r\n */\r\nexport type ActiveUserContextType = {\r\n  user: Nullable<User>;\r\n  login: (email: string, password: string) => Promise<boolean>;\r\n  logout: () => void;\r\n  setActiveUser: (user: User) => void;\r\n  loadActiveUser: () => void;\r\n  checkRole: (roleToCheck: keyof typeof roles) => boolean;\r\n};\r\n\r\n/**\r\n * noContextProviderFound is a method that throws an error and is used\r\n * inside the defaultContextValue\r\n */\r\nconst noContextProviderFound = () => {\r\n  throw new Error(\"No provider for the ActiveUserContext found\");\r\n};\r\n\r\n/**\r\n * defaultContextValue defines the default values for the ActiveUserContext.\r\n */\r\nconst defaultContextValue: ActiveUserContextType = {\r\n  user: null,\r\n  login: noContextProviderFound,\r\n  logout: noContextProviderFound,\r\n  setActiveUser: noContextProviderFound,\r\n  loadActiveUser: noContextProviderFound,\r\n  checkRole: noContextProviderFound,\r\n};\r\n\r\n/**\r\n * ActiveUserContext has the purpose of providing the currently active user\r\n * as well as related values, modifiers and related operations such as login\r\n * and logout.\r\n */\r\nconst ActiveUserContext =\r\n  createContext<ActiveUserContextType>(defaultContextValue);\r\nexport default ActiveUserContext;\r\n\r\n/**\r\n * Props for the ActiveUserContextProvider Component\r\n */\r\ntype ActiveUserContextProviderProps = {\r\n  children: React.ReactNode;\r\n};\r\n\r\n/**\r\n * ActiveUserContextProvider Component is used to provide the ActiveUserContext\r\n * to all child-components.\r\n * @param children consists of all the elements that are located inside the\r\n */\r\nexport const ActiveUserContextProvider = ({\r\n  children,\r\n}: ActiveUserContextProviderProps) => {\r\n  /**\r\n   * Try to load the user data that is stored inside the LocalStorage.\r\n   * If non is present, null will be returned.\r\n   */\r\n  const loadSavedUserData = (): Nullable<User> => {\r\n    const storeUser = localStorage.getItem(USER_DATA_LOCAL_STORAGE_KEY);\r\n    if (storeUser === null) return null;\r\n    return JSON.parse(storeUser);\r\n  };\r\n\r\n  // The following line defines the user state which is holding the user\r\n  // data inside this context.\r\n  const [user, setUser] = useState<Nullable<User>>(() => loadSavedUserData());\r\n  const navigate = useNavigate();\r\n  /**\r\n   * Update the user that is provided by the ActiveUserContext\r\n   * @param updatedUser\r\n   */\r\n  const setActiveUser = (updatedUser: User) => {\r\n    setUser(updatedUser);\r\n    localStorage.setItem(\r\n      USER_DATA_LOCAL_STORAGE_KEY,\r\n      JSON.stringify(updatedUser)\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Remove all user and authorization related data from the localStorage\r\n   */\r\n  const resetAuthorization = () => {\r\n    // Reset the stored data inside the AuthorityService.\r\n    AuthorityService.clearAuthorities();\r\n    // Clear all data from the localStorage.\r\n    localStorage.clear();\r\n    // Set the user, which is stored inside the context to null.\r\n    setUser(null);\r\n  };\r\n\r\n  /**\r\n   * Logout the currently active user by resetting the stored user data\r\n   * and redirecting to the LoginPage.\r\n   */\r\n  const logout = () => {\r\n    // If no token is saved inside the local storage clear the localStorage directly\r\n    if (localStorage.getItem(TOKEN_LOCAL_STORAGE_KEY) === null) {\r\n      resetAuthorization();\r\n      return;\r\n    }\r\n    // If a token is present send a logout-request and clear the localStorage afterwards\r\n    api.get(\"/logout\").finally(resetAuthorization);\r\n    //navigate to login page\r\n    navigate(\"/login\");\r\n  };\r\n\r\n  /**\r\n   * Login with the provided credentials. If successful the current user gets\r\n   * updated and stored inside the context. Also the JWT-Token for further\r\n   * request based authentication is stored inside the localStorage.\r\n   * @param email\r\n   * @param password\r\n   */\r\n  const login = async (email: string, password: string) => {\r\n    await api.post(\"user/login\", { email, password }).then((response: any) => {\r\n      console.log(response.headers.authorization);\r\n      localStorage.setItem(\r\n        TOKEN_LOCAL_STORAGE_KEY,\r\n        response.headers.authorization\r\n      );\r\n      setActiveUser(response.data);\r\n      return true;\r\n    });\r\n    return false;\r\n  };\r\n\r\n  /**\r\n   * Request the user data for the currently active user from the api\r\n   * and save it to the context-state.\r\n   */\r\n  const loadActiveUser = () => {\r\n    return user\r\n      ? UserService.getUser(user.id).then((res: any) => {\r\n          setActiveUser(res);\r\n        })\r\n      : null;\r\n  };\r\n\r\n  function activeUserHasRole(roleToCheck: keyof typeof roles): boolean {\r\n    return user ? user.roles.some((role) => role.name === roleToCheck) : false;\r\n  }\r\n\r\n  /**\r\n   * Try to load the user-object from the localStorage if present.\r\n   * This is done automatically on the first render of this component.\r\n   */\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(TOKEN_LOCAL_STORAGE_KEY);\r\n    if (token !== null) {\r\n      loadActiveUser();\r\n    }\r\n  }, []);\r\n\r\n  /**\r\n   * If the user state is updated and the user is not equal to null,\r\n   * the data used in the AuthorityService as well as the data stored inside\r\n   * the localStorage will be updated with the new user-data.\r\n   */\r\n  useEffect(() => {\r\n    if (user !== null) {\r\n      AuthorityService.initAuthoritySet(user);\r\n      localStorage.setItem(USER_DATA_LOCAL_STORAGE_KEY, JSON.stringify(user));\r\n    }\r\n  }, [user]);\r\n\r\n  return (\r\n    <div>\r\n      <ActiveUserContext.Provider\r\n        value={{\r\n          user,\r\n          setActiveUser,\r\n          login,\r\n          logout,\r\n          loadActiveUser,\r\n          checkRole: activeUserHasRole,\r\n        }}\r\n      >\r\n        {children}\r\n      </ActiveUserContext.Provider>\r\n    </div>\r\n  );\r\n};\r\n","import {\r\n  Paper,\r\n  Grid,\r\n  TextField,\r\n  Button,\r\n  Typography,\r\n  Link,\r\n} from '@mui/material';\r\nimport React, { useContext } from 'react';\r\n\r\nimport { Form, Formik } from 'formik';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport ActiveUserContext from '../../../Contexts/ActiveUserContext';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  email: Yup.string(),\r\n  password: Yup.string(),\r\n});\r\n\r\nconst Login = () => {\r\n  const paperStyle = {\r\n    padding: 20,\r\n    height: '70vh',\r\n    width: 280,\r\n    margin: '20px auto',\r\n  };\r\n  const btnstyle = { margin: '8px 0' };\r\n  const navigate = useNavigate();\r\n  const { login } = useContext(ActiveUserContext);\r\n\r\n  const handleSubmit = (values: { email: string; password: string }) => {\r\n    login(values.email.toLowerCase(), values.password)\r\n      .then(() => {\r\n        console.log(values);\r\n\r\n        navigate('/');\r\n      })\r\n      .catch((error) => {\r\n\r\n\r\n          alert('login Error');\r\n        \r\n      });\r\n  };\r\n  return (\r\n    <Grid>\r\n      <Paper elevation={10} style={paperStyle}>\r\n        <Grid>\r\n          <h2>Sign In</h2>\r\n          <p>Default login:</p>\r\n          <p>email: admin@example.com</p>\r\n          <p>pw: 1234</p>\r\n        </Grid>\r\n\r\n        <Formik\r\n          initialValues={{\r\n            email: '',\r\n            password: '',\r\n          }}\r\n          enableReinitialize\r\n          validationSchema={validationSchema}\r\n          onSubmit={handleSubmit}\r\n          validateOnChange\r\n          isInitialValid\r\n        >\r\n          {(props) => (\r\n            <Form onSubmit={props.handleSubmit}>\r\n              <TextField\r\n                label='email'\r\n                id='email'\r\n                placeholder='Enter username'\r\n                fullWidth\r\n                required\r\n                autoFocus\r\n                onChange={props.handleChange}\r\n                onBlur={props.handleBlur}\r\n                value={props.values.email}\r\n              />\r\n              {props.errors.email && (\r\n                <div id='feedback'>{props.errors.email}</div>\r\n              )}\r\n\r\n              <TextField\r\n                id='password'\r\n                label='password'\r\n                placeholder='Enter password'\r\n                type='password'\r\n                fullWidth\r\n                required\r\n                onChange={props.handleChange}\r\n                onBlur={props.handleBlur}\r\n                value={props.values.password}\r\n              />\r\n              {props.errors.password && (\r\n                <div id='feedback'>{props.errors.password}</div>\r\n              )}\r\n\r\n              <Button\r\n                type='submit'\r\n                color='primary'\r\n                variant='contained'\r\n                style={btnstyle}\r\n                fullWidth\r\n              >\r\n                Sign in\r\n              </Button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n        <Typography>\r\n          <Link href='#'>Forgot password ?</Link>\r\n        </Typography>\r\n        <Typography>\r\n          {' '}\r\n          Do you have an account ?<Link href='#'>Sign Up</Link>\r\n        </Typography>\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React, { useContext } from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport * as jwt from 'jsonwebtoken';\r\nimport ActiveUserContext from '../Contexts/ActiveUserContext';\r\nimport AuthorityService from '../Services/AuthorityService';\r\nimport { Authority } from '../types/models/Authority.model';\r\nimport { Button } from '@mui/material';\r\n\r\ninterface Props {\r\n  element: React.ReactElement;\r\n  authorities: Authority[];\r\n}\r\n\r\ntype JWTType = {\r\n  iss: string;\r\n  exp: number;\r\n};\r\n\r\nconst PrivateRoute: React.FC<Props> = ({\r\n  element: RouteComponent,\r\n  authorities,\r\n}) => {\r\n  const activeUserContext = useContext(ActiveUserContext);\r\n  /**\r\n   * isLoggedIn checks if the token, which is saved inside the localStorage,\r\n   * exists, isn't expired yet and has been issued by the correct issuer.\r\n   * If all of the above is true the user is seen as logged in.\r\n   */\r\n  const isLoggedIn = () => {\r\n    let tokenString = localStorage.getItem('token');\r\n    if (!tokenString) {\r\n      console.error('no token found');\r\n      return false;\r\n    }\r\n    tokenString = tokenString.replace('Bearer ', '');\r\n    const token: JWTType = jwt.decode(tokenString) as JWTType;\r\n    // Check if token does not exist or doesn't have an expiration claim or is expired.\r\n    if (!token || !token.exp || token.exp < Date.now() / 1000) {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n  /**\r\n   * If the user is not logged in call activeUserContext.logout, which destroys\r\n   * all locally saved user data and redirects to /login.\r\n   */\r\n  if (!isLoggedIn()) {\r\n    activeUserContext.logout();\r\n    return <Navigate to='/login' replace={true} />;\r\n  }\r\n  /**\r\n   * Check if the active user has at least 1 of the needed authorities.\r\n   * If no authorities are needed true is returned.\r\n   */\r\n  const hasNeededAuthorities =\r\n    authorities.length === 0 || authorities.some(AuthorityService.hasAuthority);\r\n\r\n  /**\r\n   * If the user doesn't possess the needed authorities Redirect the user to\r\n   * /unauthorized\r\n   */\r\n  if (!hasNeededAuthorities) {\r\n    return <Navigate to='/unauthorized' replace={true} />;\r\n  }\r\n\r\n  // All checks passed\r\n  return (\r\n    //Pagelayout puts the Navigation, Menu etc. around the component\r\n    <div>\r\n      <Button onClick={activeUserContext.logout}>Logout</Button>\r\n      {RouteComponent}\r\n    </div>\r\n  );\r\n};\r\nexport default PrivateRoute;\r\n","import Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport { useEffect, useState } from 'react';\r\nimport { User } from '../../../types/models/User.model';\r\nimport UserService from '../../../Services/UserService';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst UserTable = () => {\r\n  const navigate = useNavigate();\r\n  const [users, setUsers] = useState<User[]>([]);\r\n\r\n  useEffect(() => {\r\n    UserService.getAllUsers().then((data) => {\r\n      setUsers(data.data);\r\n    });\r\n  }, []);\r\n\r\n  const handleAdd = () => {\r\n    navigate('../useredit/');\r\n  };\r\n\r\n  const handleEdit = (id: string) => {\r\n    navigate('../useredit/' + id);\r\n  };\r\n\r\n  const handleDelete = (id: string) => {\r\n    UserService.deleteUser(id);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {users.map((user) => (\r\n        <div key={user.id}>\r\n          <Card sx={{ minWidth: 275 }}>\r\n            <CardContent>\r\n              {user.firstName} {user.lastName} {user.email}\r\n              <CardActions>\r\n                <Button\r\n                  size='small'\r\n                  color='primary'\r\n                  variant='contained'\r\n                  onClick={() => handleEdit(user.id)}\r\n                >\r\n                  Edit\r\n                </Button>\r\n                <Button\r\n                  size='small'\r\n                  color='error'\r\n                  variant='contained'\r\n                  onClick={() => handleDelete(user.id)}\r\n                >\r\n                  Delete\r\n                </Button>\r\n                <Button\r\n                  size='small'\r\n                  color='error'\r\n                  variant='contained'\r\n                  onClick={() => navigate(`/users/${user.id}/posts`)}\r\n                >\r\n                  Posts\r\n                </Button>\r\n              </CardActions>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      ))}\r\n      <Button\r\n        size='small'\r\n        color='success'\r\n        variant='contained'\r\n        onClick={handleAdd}\r\n      >\r\n        Add\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserTable;\r\n","import { useFormik } from 'formik';\r\nimport { User } from '../../../types/models/User.model';\r\nimport { Box, Button, TextField } from '@mui/material';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { object, string } from 'yup';\r\n\r\ninterface UserProps {\r\n  user: User;\r\n  submitActionHandler: (values: User) => void;\r\n}\r\n\r\nconst UserForm = ({ user, submitActionHandler }: UserProps) => {\r\n  const navigate = useNavigate();\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      id: user.id,\r\n      lastName: user ? user.lastName : '',\r\n      firstName: user ? user.firstName : '',\r\n      email: user ? user.email : '',\r\n      roles: user ? user.roles : [],\r\n    },\r\n    validationSchema: object({\r\n      firstName: string().required().min(2).max(50),\r\n      lastName: string().required().min(2).max(50),\r\n      email: string().required().email(),\r\n    }),\r\n    onSubmit: (values: User) => {\r\n      submitActionHandler(values);\r\n    },\r\n    enableReinitialize: true,\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <Box sx={{ paddingTop: '15px' }}>\r\n          <TextField\r\n            id='firstName'                \r\n            label='Firstname'\r\n            variant='outlined'\r\n            sx={{ paddingRight: '10px' }}\r\n            onBlur={formik.handleBlur}\r\n            onChange={formik.handleChange}\r\n            error={Boolean(formik.touched.firstName && formik.errors.firstName)}\r\n            value={formik.values.firstName}\r\n          />\r\n          {formik.errors.firstName && formik.touched.firstName ? (\r\n            <div style={{ color: 'red' }}>{formik.errors.firstName}</div>\r\n          ) : null}\r\n          <TextField\r\n            id='lastName'\r\n            label='Lastname'\r\n            variant='outlined'\r\n            sx={{ paddingRight: '10px' }}\r\n            onBlur={formik.handleBlur}\r\n            onChange={formik.handleChange}\r\n            error={Boolean(formik.touched.lastName && formik.errors.lastName)}\r\n            value={formik.values.lastName}\r\n          />\r\n          {formik.errors.lastName && formik.touched.lastName ? (\r\n            <div style={{ color: 'red' }}>{formik.errors.lastName}</div>\r\n          ) : null}\r\n          <TextField\r\n            id='email'\r\n            label='E-Mail'\r\n            variant='outlined'\r\n            onBlur={formik.handleBlur}\r\n            onChange={formik.handleChange}\r\n            error={Boolean(formik.touched.email && formik.errors.email)}\r\n            value={formik.values.email}\r\n          />\r\n\r\n          {formik.errors.email && formik.touched.email ? (\r\n            <div style={{ color: 'red' }}>{formik.errors.email}</div>\r\n          ) : null}\r\n        </Box>\r\n        <div>\r\n          <Button\r\n            sx={{ marginTop: '15px', marginRight: '10px' }}\r\n            variant='contained'\r\n            color='success'\r\n            type='submit'\r\n            disabled={!(formik.dirty && formik.isValid)}\r\n          >\r\n            {user.id && 'Save'}\r\n            {!user.id && 'Add'}\r\n          </Button>\r\n          <Button\r\n            sx={{ marginTop: '15px' }}\r\n            variant='contained'\r\n            color='error'\r\n            onClick={() => {\r\n              navigate('/users');\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserForm;\r\n","import { useNavigate, useParams } from 'react-router-dom';\r\nimport { User } from '../../../types/models/User.model';\r\nimport UserService from '../../../Services/UserService';\r\nimport UserForm from '../../molecules/UserForm/UserForm';\r\nimport { useEffect, useState } from 'react';\r\n\r\nconst UserPage = () => {\r\n  const navigate = useNavigate();\r\n  const { userId } = useParams();\r\n  const [user, setUser] = useState<User>({\r\n    id: '',\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    roles: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      if (userId) {\r\n        UserService.getUser(userId).then((res) => {\r\n          return setUser(res);\r\n        });\r\n      }\r\n    };\r\n  }, [userId]);\r\n\r\n  const submitActionHandler = (values: User) => {\r\n    if (userId !== undefined) {\r\n      UserService.updateUser(values).then(() => {\r\n        navigate('../users');\r\n      });\r\n    } else {\r\n      UserService.addUser(values).then(() => {\r\n        navigate('/users');\r\n      });\r\n    }\r\n  };\r\n\r\n  return <UserForm user={user} submitActionHandler={submitActionHandler} />;\r\n};\r\nexport default UserPage;\r\n","import api from '../config/Api';\r\nimport { User } from '../types/models/User.model';\r\nexport type Image_Post = {\r\n  id: string;\r\n  image: string;\r\n  description: string;\r\n  likes: number;\r\n  author: User;\r\n};\r\n\r\ntype AddImageRequest = {\r\n  image: string;\r\n  description: string | null;\r\n author: User;\r\n \r\n};\r\nconst ImageService = {\r\n\r\n  updateImage: async (params: Image_Post) => {\r\n    const res = await api.put(`/imagepost/${params.id}`, {...params,\"Image\": params.image, \"Description\": params.description});\r\n    if (res && res.status === 200) {\r\n      console.log(\"image successfully updated\");\r\n    }\r\n  },\r\n  createImage: async (params: AddImageRequest) => {\r\n    const res = await api.post(\"/imagepost/\", params);\r\n    if (res && res.status === 200) {\r\n      console.log(\"image successfully created\");\r\n    }\r\n  },\r\n\r\n  getAllImages: async () => {\r\n    try {\r\n      const response = await api.get(\"/imagepost/\");\r\n      return response.data;\r\n    } catch (error) {\r\n      console.error(\"ERRORRRRRRRR\", error);\r\n      return [];\r\n    }\r\n  },\r\n  getImageById: async (imageId: string) => {\r\n    const data = await api.get(`/imagepost/${imageId}`);\r\n    console.log(data);\r\n    return data.data;\r\n  },\r\n\r\n  deleteImage: (image: Image_Post) => {\r\n    return api.delete(`/image/${image.id}`);\r\n  },\r\n};\r\n\r\nexport default ImageService;\r\n","\r\nimport * as React from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport Container from '@mui/material/Container';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport AdbIcon from '@mui/icons-material/Adb';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst pages = ['Users', 'Posts', 'Login'];\r\nconst settings = ['Profile', 'Account', 'Dashboard', 'Logout'];\r\nfunction ResponsiveAppBar() {\r\n  const [anchorElNav, setAnchorElNav] = React.useState<null | HTMLElement>(null);\r\n  const [anchorElUser, setAnchorElUser] = React.useState<null | HTMLElement>(null);\r\n  const handleOpenNavMenu = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorElNav(event.currentTarget);\r\n  };\r\n  const handleOpenUserMenu = (event: React.MouseEvent<HTMLElement>) => {\r\n    setAnchorElUser(event.currentTarget);\r\n  };\r\n  const handleCloseNavMenu = () => {\r\n    setAnchorElNav(null);\r\n  };\r\n  const handleCloseUserMenu = () => {\r\n    setAnchorElUser(null);\r\n  };\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <Container maxWidth=\"xl\">\r\n        <Toolbar disableGutters>\r\n          <AdbIcon sx={{ display: { xs: 'none', md: 'flex' }, mr: 1 }} />\r\n          <Typography\r\n            variant=\"h6\"\r\n            noWrap\r\n            component=\"a\"\r\n            href=\"/\"\r\n            sx={{\r\n              mr: 2,\r\n              display: { xs: 'none', md: 'flex' },\r\n              fontFamily: 'monospace',\r\n              fontWeight: 700,\r\n              letterSpacing: '.3rem',\r\n              color: 'inherit',\r\n              textDecoration: 'none',\r\n            }}\r\n          >\r\n            LOGO\r\n          </Typography>\r\n          <Box sx={{ flexGrow: 1, display: { xs: 'flex', md: 'none' } }}>\r\n            <IconButton\r\n              size=\"large\"\r\n              aria-label=\"account of current user\"\r\n              aria-controls=\"menu-appbar\"\r\n              aria-haspopup=\"true\"\r\n              onClick={handleOpenNavMenu}\r\n              color=\"inherit\"\r\n            >\r\n\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Menu\r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorElNav}\r\n              anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'left',\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'left',\r\n              }}\r\n              open={Boolean(anchorElNav)}\r\n              onClose={handleCloseNavMenu}\r\n              sx={{\r\n                display: { xs: 'block', md: 'none' },\r\n              }}\r\n            >\r\n              {pages.map((page) => (\r\n                <MenuItem key={page} onClick={handleCloseNavMenu}>\r\n                  <Typography textAlign=\"center\">{page}</Typography>\r\n                </MenuItem>\r\n              ))}\r\n            </Menu>\r\n          </Box>\r\n          <AdbIcon sx={{ display: { xs: 'flex', md: 'none' }, mr: 1 }} />\r\n          <Typography\r\n            variant=\"h5\"\r\n            noWrap\r\n            component=\"a\"\r\n            href=\"/\"\r\n            sx={{\r\n              mr: 2,\r\n              display: { xs: 'flex', md: 'none' },\r\n              flexGrow: 1,\r\n              fontFamily: 'monospace',\r\n              fontWeight: 700,\r\n              letterSpacing: '.3rem',\r\n              color: 'inherit',\r\n              textDecoration: 'none',\r\n            }}\r\n          >\r\n            LOGO\r\n          </Typography>\r\n          <Box sx={{ flexGrow: 1, display: { xs: 'none', md: 'flex' } }}>\r\n            <Link to={\"/users\"}>\r\n              <Button\r\n                key={pages[0]}\r\n                sx={{ my: 2, color: 'white', display: 'block' }}\r\n              >\r\n                {pages[0]}\r\n              </Button>\r\n              </Link>\r\n              <Link to={\"/\"}>\r\n              <Button\r\n                key={pages[1]}\r\n                onClick={handleCloseNavMenu}\r\n                sx={{ my: 2, color: 'white', display: 'block' }}\r\n              >\r\n                {pages[1]}\r\n              </Button>\r\n              </Link>\r\n              <Link to={\"/Login\"}>\r\n              <Button\r\n                key={pages[2]}\r\n                onClick={handleCloseNavMenu}\r\n                sx={{ my: 2, color: 'white', display: 'block' }}\r\n              >\r\n                {pages[2]}\r\n              </Button>\r\n              </Link>\r\n          </Box>\r\n          <Box sx={{ flexGrow: 0 }}>\r\n            <Tooltip title=\"Open settings\">\r\n              <IconButton onClick={handleOpenUserMenu} sx={{ p: 0 }}>\r\n                <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/2.jpg\" />\r\n              </IconButton>\r\n            </Tooltip>\r\n            <Menu\r\n              sx={{ mt: '45px' }}\r\n              id=\"menu-appbar\"\r\n              anchorEl={anchorElUser}\r\n              anchorOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n              }}\r\n              keepMounted\r\n              transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n              }}\r\n              open={Boolean(anchorElUser)}\r\n              onClose={handleCloseUserMenu}\r\n            >\r\n              {settings.map((setting) => (\r\n                <MenuItem key={setting} onClick={handleCloseUserMenu}>\r\n                  <Typography textAlign=\"center\">{setting}</Typography>\r\n                </MenuItem>\r\n              ))}\r\n            </Menu>\r\n          </Box>\r\n        </Toolbar>\r\n      </Container>\r\n    </AppBar>\r\n  );\r\n}\r\nexport default ResponsiveAppBar;\r\n","import * as React from 'react';\r\nimport Checkbox from '@mui/material/Checkbox';\r\nimport FavoriteBorder from '@mui/icons-material/FavoriteBorder';\r\nimport Favorite from '@mui/icons-material/Favorite';\r\nimport BookmarkBorderIcon from '@mui/icons-material/BookmarkBorder';\r\nimport BookmarkIcon from '@mui/icons-material/Bookmark';\r\n\r\nconst label = { inputProps: { 'aria-label': 'Checkbox demo' } };\r\n\r\nexport default function IconCheckboxes() {\r\n  return (\r\n    <div>\r\n      <Checkbox {...label} icon={<FavoriteBorder />} checkedIcon={<Favorite />} />\r\n    </div>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport ImageService, { Image_Post } from \"../../Services/ImageService\";\r\nimport NavBar from \"../atoms/NavBar\";\r\nimport LikeButton from \"../atoms/LikeButton\";\r\nimport { User } from \"../../types/models/User.model\";\r\nimport { useContext } from \"react\";\r\nimport ActiveUserContext from \"../../Contexts/ActiveUserContext\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function Homepage() {\r\n  const context = useContext(ActiveUserContext);\r\n\r\n  const [images, setImage] = React.useState([]);\r\n  React.useEffect(() => {\r\n    const service = ImageService;\r\n    service\r\n      .getAllImages()\r\n      .then((data: React.SetStateAction<never[]>) => {\r\n        console.log(data);\r\n        setImage(data);\r\n      })\r\n      .catch((error: any) => {\r\n        console.error(\"Fehler beim Abrufen der Bilder: \", error);\r\n      });\r\n  }, []);\r\n\r\n  function userCanEditPost(post:Image_Post, user:User){\r\n    if(post.author ){\r\n    return user.id === post.author.id ||\r\n    context.checkRole(\"ADMIN\")\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      {\r\n        <Box>\r\n          <Grid container spacing={1}>\r\n            {images.map((image: Image_Post, index) => (\r\n              <Grid\r\n                item\r\n                key={index}\r\n                xs={2}\r\n                marginTop={\"10px\"}\r\n                marginLeft={\"45px\"}\r\n              >\r\n                <Paper elevation={0} sx={{ padding: 2 }}>\r\n                  <img\r\n                    src={image.image}\r\n                    alt={`Bild ${index}`}\r\n                    style={{\r\n                      width: \"100%\",\r\n                      height: \"100%\",\r\n                      borderRadius: \"0px\",\r\n                      padding: \"1px\",\r\n                      margin: \"10px\",\r\n                    }}\r\n                  />\r\n                  <p> {image.author ? image.author.firstName: \"undefined\"} </p>\r\n\r\n                  <p> {image.description} </p>\r\n\r\n                    \r\n                  <LikeButton />                               {/*Delete button geht nicht aus unbekannten Gründen*/}\r\n               {context.user && userCanEditPost(image, context.user ) &&   <button>delete</button>} \r\n               <Link to={`/editimage/${image.id}`}><button >Edit</button></Link>\r\n                </Paper>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Box>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n","import { useFormik } from \"formik\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport ImageService from \"../../Services/ImageService\";\r\nimport { useContext } from \"react\";\r\nimport ActiveUserContext from \"../../Contexts/ActiveUserContext\";\r\n\r\nexport default function CreateImage() {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const context = useContext(ActiveUserContext);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      image: \"\",\r\n      description: \"\",\r\n    },\r\n    onSubmit: (values) => {\r\n      handleSubmit(values.image, values.description);\r\n    },\r\n  });\r\n\r\n  const handleSubmit = (image:string, description:string) => {\r\n    if(context.user){ImageService.createImage({ image:image, description:description, author:context.user})\r\n      .then((response) => {\r\n        console.log(\"response\", response);\r\n        navigate(\"/\");\r\n      })\r\n      .catch((e) => {\r\n        postMessage(e.response.data);\r\n      });}\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={formik.handleSubmit}>\r\n      <div>\r\n        <h1>New Image</h1>\r\n        <label htmlFor=\"image\">Image</label>\r\n        <input\r\n          id=\"image\"\r\n          name=\"image\"\r\n          type=\"text\"\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          value={formik.values.image}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"description\">description</label>\r\n        <input\r\n          id=\"description\"\r\n          name=\"description\"\r\n          type=\"text\"\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          value={formik.values.description}\r\n        />\r\n      </div>\r\n      <button type=\"submit\">add</button>\r\n      <button type=\"submit\" > <a href=\"/\"/>cancel</button>\r\n\r\n    </form>\r\n  );\r\n}","import { useFormik } from \"formik\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport ImageService, { Image_Post } from \"../../Services/ImageService\";\r\nimport { useEffect, useState } from \"react\";\r\nimport React from \"react\";\r\n\r\n\r\nexport default function UpdateImage(){\r\n  const{imageId}=useParams();\r\n  const navigate = useNavigate();\r\n  const [images, setImages] = useState<Image_Post[]>([]);\r\n\r\nconst formik = useFormik({\r\n  initialValues: {\r\n      id: imageId??\"\",\r\n  image: \"\",\r\n  description: \"\"\r\n  },\r\n  onSubmit: (values) => {\r\n    handleSubmit(values.image, values.description);\r\n  },\r\n});\r\n\r\nuseEffect(() => {\r\n    ImageService.getImageById(imageId ?? \"\").then((data) => {\r\n     setImages(data);\r\n     console.log(images)\r\n      formik.setValues({\r\n        id: imageId ?? \"\",\r\n        image: data.image, \r\n        description: data.description, \r\n      });\r\n    });\r\n  }, []);\r\n\r\n  \r\nconst handleSubmit = (image:string,description:string)=>{\r\n    console.log(\"test\",imageId)\r\n    ImageService.updateImage({\r\n        id: imageId??\"\", image: image, description: description,\r\n        likes: 0,\r\n        author: {\r\n            id: \"\",\r\n            email: \"\",\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            roles: []\r\n        }\r\n        })\r\n     .then((response) => {\r\n        console.log(\"response\", response);\r\n        navigate(`/editimage/${imageId}`);\r\n      })\r\n      .catch((e) => {\r\n        postMessage(e.response.data);\r\n      });\r\n  }\r\nreturn(\r\n    <form onSubmit={formik.handleSubmit}>\r\n      <div>\r\n        <h1>Update Image</h1>\r\n        <label htmlFor=\"image\">image</label>\r\n        <input\r\n          id=\"image\"\r\n          name=\"image\"\r\n          type=\"text\"\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          value={formik.values.image}\r\n        />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"description\">description</label>\r\n        <input\r\n          id=\"description\"\r\n          name=\"description\"\r\n          type=\"text\"\r\n          onChange={formik.handleChange}\r\n          onBlur={formik.handleBlur}\r\n          value={formik.values.description}\r\n        />\r\n      </div>\r\n      <button type=\"submit\">send</button>\r\n    </form>\r\n);\r\n}","import { useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport UserService from \"../../../Services/UserService\";\r\nimport { User } from \"../../../types/models/User.model\";\r\nimport NavBar from \"../../atoms/NavBar\";\r\nimport { Box, Grid, Paper } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport ImageService, { Image_Post } from \"../../../Services/ImageService\";\r\nimport LikeButton from \"../../atoms/LikeButton\";\r\n\r\nconst UserPosts = ()=> {\r\n    const{id}=useParams();\r\n    const [user, setUser] = useState<User>();\r\n\r\n    useEffect(() => {\r\n        UserService.getUser(id ?? \"\").then((data) => {\r\n         setUser(data);\r\n        });\r\n      }, []);\r\n\r\n      const [images, setImage] = React.useState([]);\r\n  React.useEffect(() => {\r\n    const service = ImageService;\r\n    service\r\n      .getAllImages()\r\n      .then((data: React.SetStateAction<never[]>) => {\r\n        console.log(data);\r\n        setImage(data);\r\n      })\r\n      .catch((error: any) => {\r\n        console.error(\"Fehler beim Abrufen der Bilder: \", error);\r\n      });\r\n  }, []);\r\n\r\n\r\n     \r\n    return(\r\n        <div>\r\n            <NavBar />\r\n            {\r\n            <Box>\r\n              \r\n            </Box>\r\n}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default UserPosts;","import { Route, Routes } from \"react-router-dom\";\r\nimport LoginPage from \"../components/pages/LoginPage/LoginPage\";\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport UserTable from \"../components/pages/UserPage/UserTable\";\r\nimport UserPage from \"../components/pages/UserPage/UserPage\";\r\nimport Login from \"../components/pages/LoginPage/LoginPage\";\r\nimport HomePage from \"../components/pages/HomePage\";\r\nimport CreateImage from \"../components/pages/CreateImage\";\r\nimport UpdateImage from \"../components/pages/UpdateImage\";\r\nimport UserPosts from \"../components/pages/UserPage/UserPosts\";\r\n\r\n/**\r\n * Router component renders a route switch with all available pages\r\n */\r\n\r\nconst Router = () => {\r\n  //const { checkRole } = useContext(ActiveUserContext);\r\n\r\n  /** navigate to different \"home\"-locations depending on Role the user have */\r\n\r\n  return (\r\n    <Routes>\r\n      <Route path={\"/\"} element={<HomePage />} />\r\n      <Route path={\"/Login\"} element={<LoginPage/>} />\r\n      <Route path={\"/add\"} element={<CreateImage/>} />\r\n      <Route path={\"/editimage/:imageId\"} element={<UpdateImage/>} />\r\n      <Route path={\"/users/:userId/posts\"} element={<UserPosts/>} />\r\n\r\n      <Route\r\n        path={\"/users\"}\r\n        element={<PrivateRoute authorities={[]} element={<UserTable />} />}\r\n      />\r\n      \r\n      <Route\r\n        path=\"/useredit\"\r\n        element={\r\n          <PrivateRoute authorities={[]} element={<UserPage />}></PrivateRoute>\r\n        }\r\n      />\r\n      <Route\r\n        path=\"/useredit/:userId\"\r\n        element={\r\n          <PrivateRoute authorities={[]} element={<UserPage />}></PrivateRoute>\r\n        }\r\n      />\r\n\r\n      <Route path=\"*\" element={<div>Not Found</div>} />\r\n    </Routes>\r\n  );\r\n};\r\n\r\nexport default Router;\r\n","import React from 'react';\r\n\r\nimport './App.css';\r\n\r\nimport { ActiveUserContextProvider } from './Contexts/ActiveUserContext';\r\nimport Router from './Router/Router';\r\n\r\nfunction App() {\r\n  return (\r\n    <ActiveUserContextProvider>\r\n      <Router />\r\n    </ActiveUserContextProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nconst root = ReactDOM.createRoot(\r\n  document.getElementById('root') as HTMLElement\r\n);\r\nroot.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>\r\n);\r\n"],"sourceRoot":""}